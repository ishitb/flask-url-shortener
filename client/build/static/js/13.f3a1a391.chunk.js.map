{"version":3,"sources":["components/Register.js"],"names":["Register","setSignUpForm","setSigningIn","register","useStoreActions","actions","accountModel","toggleLoader","loaderModel","emailRef","useRef","passwordRef","password1Ref","nameRef","useState","errorType","setErrorType","signUp","e","a","preventDefault","emailVal","current","value","nameVal","passwordVal","password1Val","email","password","password2","name","goBack","setError","className","onSubmit","htmlFor","onChange","ref","type","placeholder","required","maxLength","minLength","onClick"],"mappings":"kKAuIeA,UApIE,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aACvBC,EAAaC,aACjB,SAACC,GAAD,OAAaA,EAAQC,gBADjBH,SAGAI,EAAiBH,aACrB,SAACC,GAAD,OAAaA,EAAQG,eADjBD,aAIFE,EAAWC,mBACXC,EAAcD,mBACdE,EAAeF,mBACfG,EAAUH,mBAEhB,EAAkCI,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAM,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sDACXD,EAAEE,iBAEIC,EAAWZ,EAASa,QAAQC,MAC5BC,EAAUX,EAAQS,QAAQC,MAC1BE,EAAcd,EAAYW,QAAQC,MAClCG,EAAed,EAAaU,QAAQC,MAE1CpB,EAAS,CACLwB,MAAON,EACPO,SAAUH,EACVI,UAAWH,EACXI,KAAMN,EACNjB,aAAcA,EACdwB,OAAQ,kBAAM7B,GAAa,IAC3B8B,SAAUhB,IAfH,2CAAH,sDAmBZ,OACI,sBAAKiB,UAAU,OAAf,UACI,uBACIC,SAAUjB,EACVgB,UAAU,mBAFd,UAII,sBAAKA,UAAU,aAAf,UACI,uBAAOE,QAAQ,OAAf,SACI,mBAAGF,UAAU,oCAEjB,uBACIG,SAAU,WACNpB,EAAa,IAEjBqB,IAAKxB,EACLiB,KAAK,OACLQ,KAAK,OACLL,UAAS,2BACS,IAAdlB,EAAkB,QAAU,IAEhCwB,YAAY,OACZC,UAAQ,EACRC,UAAU,UAGlB,sBAAKR,UAAU,aAAf,UACI,uBAAOE,QAAQ,cAAf,SACI,mBAAGF,UAAU,wCAEjB,uBACIG,SAAU,WACNpB,EAAa,IAEjBqB,IAAK5B,EACLqB,KAAK,QACLQ,KAAK,OACLL,UAAS,2BACS,IAAdlB,EAAkB,QAAU,IAEhCwB,YAAY,QACZC,UAAQ,OAGhB,sBAAKP,UAAU,aAAf,UACI,uBAAOE,QAAQ,WAAf,SACI,mBAAGF,UAAU,mCAEjB,uBACIG,SAAU,WACNpB,EAAa,IAEjBqB,IAAK1B,EACL2B,KAAK,WACLR,KAAK,WACLG,UAAS,2BACS,IAAdlB,EAAkB,QAAU,IAEhCwB,YAAY,WACZC,UAAQ,EACRE,UAAU,IACVD,UAAU,UAGlB,sBAAKR,UAAU,aAAf,UACI,uBAAOE,QAAQ,mBAAf,SACI,mBAAGF,UAAU,mCAEjB,uBACIG,SAAU,WACNpB,EAAa,IAEjBqB,IAAKzB,EACL0B,KAAK,WACLR,KAAK,kBACLG,UAAS,2BACS,IAAdlB,EAAkB,QAAU,IAEhCwB,YAAY,mBACZC,UAAQ,OAGhB,wBACIP,UAAU,wEACVK,KAAK,SAFT,wBAOJ,wBACIL,UAAU,+CACVU,QAAS,kBAAM1C,GAAc,IAFjC","file":"static/js/13.f3a1a391.chunk.js","sourcesContent":["import { useState, useRef } from 'react';\nimport { useStoreActions } from 'easy-peasy';\n\nconst Register = ({ setSignUpForm, setSigningIn }) => {\n    const { register } = useStoreActions(\n        (actions) => actions.accountModel\n    );\n    const { toggleLoader } = useStoreActions(\n        (actions) => actions.loaderModel\n    );\n\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const password1Ref = useRef();\n    const nameRef = useRef();\n\n    const [errorType, setErrorType] = useState(3);\n\n    const signUp = async (e) => {\n        e.preventDefault();\n\n        const emailVal = emailRef.current.value;\n        const nameVal = nameRef.current.value;\n        const passwordVal = passwordRef.current.value;\n        const password1Val = password1Ref.current.value;\n\n        register({\n            email: emailVal,\n            password: passwordVal,\n            password2: password1Val,\n            name: nameVal,\n            toggleLoader: toggleLoader,\n            goBack: () => setSigningIn(false),\n            setError: setErrorType,\n        });\n    };\n\n    return (\n        <div className='back'>\n            <form\n                onSubmit={signUp}\n                className='form signUp w-75'\n            >\n                <div className='form-field'>\n                    <label htmlFor='name'>\n                        <i className='far fa-user foreground-accent'></i>\n                    </label>\n                    <input\n                        onChange={() => {\n                            setErrorType(3);\n                        }}\n                        ref={nameRef}\n                        name='name'\n                        type='text'\n                        className={`form-input w-100 ${\n                            errorType === 2 ? 'error' : ''\n                        }`}\n                        placeholder='Name'\n                        required\n                        maxLength='32'\n                    />\n                </div>\n                <div className='form-field'>\n                    <label htmlFor='login-email'>\n                        <i className='far fa-envelope foreground-accent'></i>\n                    </label>\n                    <input\n                        onChange={() => {\n                            setErrorType(3);\n                        }}\n                        ref={emailRef}\n                        name='email'\n                        type='text'\n                        className={`form-input w-100 ${\n                            errorType === 0 ? 'error' : ''\n                        }`}\n                        placeholder='Email'\n                        required\n                    />\n                </div>\n                <div className='form-field'>\n                    <label htmlFor='password'>\n                        <i className='fas fa-key foreground-accent'></i>\n                    </label>\n                    <input\n                        onChange={() => {\n                            setErrorType(3);\n                        }}\n                        ref={passwordRef}\n                        type='password'\n                        name='password'\n                        className={`form-input w-100 ${\n                            errorType === 1 ? 'error' : ''\n                        }`}\n                        placeholder='Password'\n                        required\n                        minLength='6'\n                        maxLength='20'\n                    />\n                </div>\n                <div className='form-field'>\n                    <label htmlFor='confirm password'>\n                        <i className='fas fa-key foreground-accent'></i>\n                    </label>\n                    <input\n                        onChange={() => {\n                            setErrorType(3);\n                        }}\n                        ref={password1Ref}\n                        type='password'\n                        name='confirmpassword'\n                        className={`form-input w-100 ${\n                            errorType === 1 ? 'error' : ''\n                        }`}\n                        placeholder='Confirm Password'\n                        required\n                    />\n                </div>\n                <button\n                    className='submit-button border-radius-10 uppercase-text background-accent w-100'\n                    type='submit'\n                >\n                    Sign Up\n                </button>\n            </form>\n            <button\n                className='submit-border border-radius-10 flip-btn w-75'\n                onClick={() => setSignUpForm(false)}\n            >\n                SIGN IN\n            </button>\n        </div>\n    );\n};\n\nexport default Register;\n"],"sourceRoot":""}