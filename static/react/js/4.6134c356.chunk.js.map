{"version":3,"sources":["components/AddLink.js"],"names":["AddLink","useState","short","setShort","confettiAnimStopped","setConfettiAnimStopped","copied","setCopied","urlRef","useRef","addLink","e","a","preventDefault","token","cookies","load","url","current","value","toast","error","fetch","method","headers","Headers","Accept","Authorization","body","JSON","stringify","then","res","json","resp","status","console","log","message","responseShort","window","location","success","confettiOptions","loop","autoplay","animationData","confetti","rendererSettings","preserveAspectRatio","onSubmit","className","type","placeholder","onChange","ref","onClick","navigator","clipboard","writeText","options","height","width","isStopped","eventListeners","eventName","callback"],"mappings":"6o/FAuIeA,UA9HC,WACZ,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAGIF,oBAAS,GAHb,mBACIG,EADJ,KAEIC,EAFJ,KAIA,EAA4BJ,oBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KAEMC,EAASC,mBAETC,EAAO,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,yDACZD,EAAEE,iBAEIC,EAAQC,IAAQC,KAAK,SACrBC,EAAMT,EAAOU,QAAQC,MAJf,uBAORC,IAAMC,MAAM,oBAPJ,0BAWZC,MAAM,YAAa,CACfC,OAAQ,OACRC,QAAS,IAAIC,QAAQ,CACjB,eAAgB,mBAChBC,OAAQ,mBACRC,cAAeb,IAEnBc,KAAMC,KAAKC,UAAU,CACjBb,IAAKA,MAEVc,KAVH,uCAUQ,WAAOC,GAAP,iBAAApB,EAAA,sEACeoB,EAAIC,OADnB,OACEC,EADF,OAGe,MAAfF,EAAIG,QACJC,QAAQC,IAAIH,GACZd,IAAMC,MAAMa,EAAKI,WAEXC,EADH,UACsBC,OAAOC,UAD7B,OACwCP,EAAKhC,OAChDC,EAASoC,GACT/B,EAAOU,QAAQC,MAAQoB,EACvBnB,IAAMsB,QACF,2DAEJrC,GAAuB,IAbvB,2CAVR,uDA0BA+B,QAAQC,IAAI,QArCA,2CAAH,sDAgDPM,EAAkB,CACpBC,MAAM,EACNC,UAAU,EACVC,cAAeC,EACfC,iBAAkB,CACdC,oBAAqB,mBAI7B,OACI,uBACIC,SAAU,SAACvC,GAAD,OACLT,EAAqBS,EAAEE,iBAAfH,EAAQC,IAErBwC,UAAU,yBAJd,UAMI,uBACIC,KAAK,MACLD,UAAU,YACVE,YAAY,6BACZC,SAAU,WACNnD,EAAS,IACTI,GAAU,IAEdgD,IAAK/C,IAERN,EACG,wBACIsD,QApCQ,WACpBC,UAAUC,UAAUC,UAAUzD,GAC9BkB,IAAMsB,QACF,0CAEJnC,GAAU,IAgCE4C,UAAS,mEACL7C,EAAS,SAAW,IAH5B,SAMI,mBAAG6C,UAAU,YAAb,oBAGJ,wBACIC,KAAK,SACLD,UAAU,2DAFd,qBAOJ,qBAAKA,UAAU,kBAAf,SACI,cAAC,IAAD,CACIS,QAASjB,EACTkB,OAAQ,IACRC,MAAO,IACPC,UAAW3D,EACX4D,eAAgB,CACZ,CACIC,UAAW,WACXC,SAAU,WACN7D,GACI,GAEJ+B,QAAQC,IACJ","file":"js/4.6134c356.chunk.js","sourcesContent":["import { useState, useRef } from 'react';\r\nimport cookies from 'react-cookies';\r\nimport { toast } from 'react-toastify';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport confetti from '../assets/confetti.json';\r\n\r\nimport '../styles/AddLink.css';\r\n\r\nconst AddLink = () => {\r\n    const [short, setShort] = useState('');\r\n    const [\r\n        confettiAnimStopped,\r\n        setConfettiAnimStopped,\r\n    ] = useState(true);\r\n    const [copied, setCopied] = useState(false);\r\n\r\n    const urlRef = useRef();\r\n\r\n    const addLink = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const token = cookies.load('Token');\r\n        const url = urlRef.current.value;\r\n\r\n        if (!url) {\r\n            toast.error('URL not provided');\r\n            return;\r\n        }\r\n\r\n        fetch('/api/urls', {\r\n            method: 'POST',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n                Authorization: token,\r\n            }),\r\n            body: JSON.stringify({\r\n                url: url,\r\n            }),\r\n        }).then(async (res) => {\r\n            const resp = await res.json();\r\n\r\n            if (res.status !== 201) {\r\n                console.log(resp);\r\n                toast.error(resp.message);\r\n            } else {\r\n                const responseShort = `${window.location}${resp.short}`;\r\n                setShort(responseShort);\r\n                urlRef.current.value = responseShort;\r\n                toast.success(\r\n                    'Link shortened! Press COPY to copy it to your clipboard'\r\n                );\r\n                setConfettiAnimStopped(false);\r\n            }\r\n        });\r\n        console.log('DONE');\r\n    };\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(short);\r\n        toast.success(\r\n            'Shortened URL copied to your clipboard'\r\n        );\r\n        setCopied(true);\r\n    };\r\n\r\n    const confettiOptions = {\r\n        loop: false,\r\n        autoplay: false,\r\n        animationData: confetti,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <form\r\n            onSubmit={(e) =>\r\n                !short ? addLink(e) : e.preventDefault()\r\n            }\r\n            className='add-link d-flex-column'\r\n        >\r\n            <input\r\n                type='url'\r\n                className='input-box'\r\n                placeholder='Enter full link to shorten'\r\n                onChange={() => {\r\n                    setShort('');\r\n                    setCopied(false);\r\n                }}\r\n                ref={urlRef}\r\n            />\r\n            {short ? (\r\n                <button\r\n                    onClick={copyToClipboard}\r\n                    className={`subheading-text submit-button uppercase-text copy-button ${\r\n                        copied ? 'copied' : ''\r\n                    }`}\r\n                >\r\n                    <p className='copy-text'>COPY</p>\r\n                </button>\r\n            ) : (\r\n                <button\r\n                    type='submit'\r\n                    className='subheading-text submit-button uppercase-text copy-button'\r\n                >\r\n                    Shorten\r\n                </button>\r\n            )}\r\n            <div className='lottie confetti'>\r\n                <Lottie\r\n                    options={confettiOptions}\r\n                    height={400}\r\n                    width={400}\r\n                    isStopped={confettiAnimStopped}\r\n                    eventListeners={[\r\n                        {\r\n                            eventName: 'complete',\r\n                            callback: () => {\r\n                                setConfettiAnimStopped(\r\n                                    true\r\n                                );\r\n                                console.log(\r\n                                    'Animation Completed'\r\n                                );\r\n                            },\r\n                        },\r\n                    ]}\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddLink;\r\n"],"sourceRoot":""}