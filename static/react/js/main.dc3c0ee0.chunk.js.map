{"version":3,"sources":["components/Loader.js","App.js","reportWebVitals.js","models/index.js","models/accountModel.js","models/loaderModel.js","index.js"],"names":["Loader","loader_shown","useStoreState","store","loaderModel","defaultOptions","loop","autoplay","animationData","loadingAnim","rendererSettings","preserveAspectRatio","createPortal","className","options","height","speed","width","isStopped","document","getElementById","Navbar","lazy","SignIn","Home","window","injectStyle","App","useState","signingIn","setSigningIn","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","accountModel","user_logged_in","token","user_data","stored_links","login","thunk","actions","a","email","password","toggleLoader","goBack","setError","fetch","method","headers","Headers","Accept","body","JSON","stringify","resp","json","res","status","setToken","setUserData","user","toast","success","error","message","console","log","logout","catch","e","finally","register","password2","name","verifyUser","undefined","savedToken","cookies","load","Authorization","err","retrieveLinks","setLinks","action","state","save","expires","Date","data","remove","updateLinks","link","links","toggle","createStore","persist","model","allow","ReactDOM","render","StrictMode"],"mappings":"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","file":"js/main.dc3c0ee0.chunk.js","sourcesContent":["import { createPortal } from 'react-dom';\r\nimport { useStoreState } from 'easy-peasy';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport loadingAnim from '../assets/loader.json';\r\n\r\nimport '../styles/Loader.css';\r\n\r\nconst Loader = () => {\r\n    const loader_shown = useStoreState(\r\n        (store) => store.loaderModel.loader_shown\r\n    );\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: loadingAnim,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice',\r\n        },\r\n    };\r\n\r\n    return createPortal(\r\n        <div\r\n            className={`loading ${\r\n                loader_shown ? 'shown' : ''\r\n            }`}\r\n        >\r\n            <div className='lottie confetti'>\r\n                <Lottie\r\n                    options={defaultOptions}\r\n                    height={400}\r\n                    speed={2}\r\n                    width={400}\r\n                    isStopped={!loader_shown}\r\n                />\r\n            </div>\r\n            {/* <div className='loader'>\r\n                <div className='inner'></div>\r\n            </div> */}\r\n        </div>,\r\n        document.getElementById('loader')\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import { Suspense, lazy, useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { injectStyle } from 'react-toastify/dist/inject-style';\n\nimport Loader from './components/Loader';\n\nimport './App.css';\n\nconst Navbar = lazy(() => import('./components/Navbar'));\nconst SignIn = lazy(() => import('./components/SignIn'));\nconst Home = lazy(() => import('./components/Home'));\n\nif (typeof window !== 'undefined') {\n    injectStyle();\n}\n\nfunction App() {\n    const [signingIn, setSigningIn] = useState(false);\n\n    return (\n        <Suspense fallback={<Loader />}>\n            <div className='App background-main'>\n                <ToastContainer />\n                <Navbar setSigningIn={setSigningIn} />\n                <Home />\n            </div>\n            <SignIn\n                signingIn={signingIn}\n                setSigningIn={setSigningIn}\n            />\n            <Loader />\n        </Suspense>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import accountModel from './accountModel';\r\nimport loaderModel from './loaderModel';\r\n\r\nconst store = {\r\n    accountModel: accountModel,\r\n    loaderModel: loaderModel,\r\n};\r\n\r\nexport default store;\r\n","import { thunk, action } from 'easy-peasy';\r\nimport cookies from 'react-cookies';\r\nimport { toast } from 'react-toastify';\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    // STORE\r\n    user_logged_in: false,\r\n    token: null,\r\n    user_data: {},\r\n    stored_links: [],\r\n\r\n    // THUNKS\r\n    login: thunk(\r\n        async (\r\n            actions,\r\n            {\r\n                email,\r\n                password,\r\n                toggleLoader,\r\n                goBack,\r\n                setError,\r\n            }\r\n        ) => {\r\n            toggleLoader(true);\r\n\r\n            fetch(`/auth/login`, {\r\n                method: 'POST',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json',\r\n                }),\r\n                body: JSON.stringify({\r\n                    email: email,\r\n                    password: password,\r\n                }),\r\n            })\r\n                .then(async (resp) => {\r\n                    const res = await resp.json();\r\n\r\n                    if (resp.status === 202) {\r\n                        actions.setToken(res.token);\r\n                        actions.setUserData(res.user);\r\n                        toast.success(\r\n                            'Logged in Successfully!'\r\n                        );\r\n                        goBack();\r\n                    } else {\r\n                        toast.error(res.message);\r\n                        if (res['error-type'] !== 'server')\r\n                            setError(res['error-type']);\r\n                        console.log(res);\r\n                        actions.logout();\r\n                    }\r\n                })\r\n                .catch((e) => {\r\n                    toast.error('Internal Server Error');\r\n                    // console.log(e);\r\n                    actions.logout();\r\n                })\r\n                .finally(() => {\r\n                    toggleLoader(false);\r\n                });\r\n        }\r\n    ),\r\n\r\n    register: thunk(\r\n        async (\r\n            actions,\r\n            {\r\n                email,\r\n                password,\r\n                password2,\r\n                name,\r\n                toggleLoader,\r\n                setError,\r\n                goBack,\r\n            }\r\n        ) => {\r\n            toggleLoader(true);\r\n\r\n            // ! ERROR TYPES :\r\n            // ! 0 ==> Email Error\r\n            // ! 1 ==> Password Error\r\n            // ! 2 ==> Name Error\r\n\r\n            setError(3);\r\n\r\n            if (password !== password2) {\r\n                setError(1);\r\n                toast.error(\"Passwords don't match!\");\r\n                return;\r\n            }\r\n\r\n            fetch(`/auth/register`, {\r\n                method: 'POST',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json',\r\n                }),\r\n                body: JSON.stringify({\r\n                    email: email,\r\n                    password: password,\r\n                    name: name,\r\n                }),\r\n            })\r\n                .then(async (resp) => {\r\n                    const res = await resp.json();\r\n\r\n                    if (resp.status === 201) {\r\n                        actions.setToken(res.token);\r\n                        actions.setUserData(res.user);\r\n                        toast.success(\r\n                            'Registered in successfully'\r\n                        );\r\n                        goBack();\r\n                    } else {\r\n                        toast.error(res.message);\r\n\r\n                        if (res['error-type'] !== 'server')\r\n                            setError(res['error-type']);\r\n\r\n                        console.log(res);\r\n                        actions.logout();\r\n                    }\r\n                })\r\n                .catch((e) => {\r\n                    toast.error('Internal Server Error');\r\n                    console.log(e);\r\n                    actions.logout();\r\n                    toggleLoader(false);\r\n                })\r\n                .finally(() => toggleLoader(false));\r\n        }\r\n    ),\r\n\r\n    verifyUser: thunk(async (actions) => {\r\n        let savedToken = cookies.load('Token');\r\n\r\n        if (savedToken === undefined) {\r\n            actions.logout();\r\n        } else\r\n            fetch(`/auth/verify`, {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: savedToken,\r\n                }),\r\n            })\r\n                .then(\r\n                    async (res) => {\r\n                        let resp = await res.json();\r\n\r\n                        if (res.status === 202)\r\n                            actions.setUserData(resp);\r\n                        else {\r\n                            actions.logout();\r\n                        }\r\n                    },\r\n                    (err) => {\r\n                        // console.log(err);\r\n                        actions.logout();\r\n                    }\r\n                )\r\n                .catch((e) => {\r\n                    // console.log(e);\r\n                    actions.logout();\r\n                });\r\n    }),\r\n\r\n    retrieveLinks: thunk(async (actions, toggleLoader) => {\r\n        const token = cookies.load('Token');\r\n\r\n        toggleLoader(true);\r\n\r\n        fetch(`/api/urls`, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                Authorization: token,\r\n            }),\r\n        })\r\n            .then(async (res) => {\r\n                const resp = await res.json();\r\n\r\n                if (res.status !== 200) {\r\n                    console.log(resp);\r\n                    toast.error(resp.message);\r\n                } else {\r\n                    actions.setLinks(resp);\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                toast.error('Internal Server Error');\r\n                console.log(e);\r\n            })\r\n            .finally(() => toggleLoader(false));\r\n    }),\r\n\r\n    // ACTIONS\r\n    setToken: action(async (state, token) => {\r\n        cookies.save('Token', `Token ${token}`, {\r\n            expires: new Date('05-03-2022'),\r\n        });\r\n        state.token = token;\r\n    }),\r\n    setUserData: action(async (state, data) => {\r\n        const token = cookies.load('Token');\r\n        state.token = token;\r\n        state.user_logged_in = true;\r\n        state.user_data = data;\r\n    }),\r\n    logout: action((state) => {\r\n        // console.log('Logging out');\r\n        cookies.remove('Token');\r\n        state.user_logged_in = false;\r\n        state.token = null;\r\n        state.user_data = {};\r\n    }),\r\n    updateLinks: action((state, link) => {\r\n        state.stored_links = [...state.stored_links, link];\r\n    }),\r\n    setLinks: action((state, links) => {\r\n        state.stored_links = [...links];\r\n    }),\r\n};\r\n","import { action } from 'easy-peasy';\r\n\r\nconst loaderModel = {\r\n    // STORE\r\n    loader_shown: false,\r\n\r\n    // ACTIONS\r\n    toggleLoader: action((state, toggle) => {\r\n        state.loader_shown = toggle;\r\n    }),\r\n};\r\n\r\nexport default loaderModel;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n    StoreProvider,\n    createStore,\n    persist,\n} from 'easy-peasy';\nimport model from './models';\n\nconst store = createStore(\n    persist(model, { allow: ['accountModel'] })\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreProvider store={store}>\n            <App />\n        </StoreProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}